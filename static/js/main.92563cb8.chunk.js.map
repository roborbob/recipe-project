{"version":3,"sources":["assets/fonts/Tangerine/Tangerine-Bold.ttf","assets/fonts/Tangerine/Tangerine-Regular.ttf","components/header.js","components/spinner.js","components/iconBar.js","containers/recipePage.js","context/themeContext.js","components/recipe.js","components/nutritionConfig.js","containers/recipes.js","components/fonts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","styled","div","Header","to","style","textDecoration","SpinnerStyles","Spinner","className","IconContainer","Icons","props","children","RecipePageStyle","article","InstructionContainer","IngredientContainer","RecipePage","sessionInstructions","JSON","parse","sessionStorage","getItem","match","params","id","useState","undefined","instructions","setInstructions","useEffect","console","log","a","url","axios","get","apiKey","request","setItem","stringify","data","fetchRecipeData","title","src","image","alt","readyInMinutes","servings","aggregateLikes","extendedIngredients","map","e","i","key","amount","unit","name","analyzedInstructions","steps","step","ThemeContext","React","createContext","RecipeContainer","Recipe","width","color","readyIn","calories","nutritionConfig","query","RecipesContainer","NutritionPlan","Button","button","background","Meal","Recipes","useContext","setTheme","theme","diet","setDiet","persistedData","state","setState","loading","toggleLoading","meal","setMeal","fetchRecipes","method","response","week","onClick","dietHandler","Object","entries","meals","nutrients","toFixed","createGlobalStyle","TangerineBold","TangerineRegular","App","Provider","value","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.92563cb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tangerine-Bold.9afc148d.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Tangerine-Regular.c848a4eb.ttf\";","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst Title = styled.div`\n    display: grid;\n    grid-template-columns: auto auto;\n    text-align: right;\n    width: 100%;\n    z-index: 1000;\n    border: 2px solid black;\n    h1 {\n        display: inline-block;\n        font-family: Helvetica;\n        font-weight: 100;\n        letter-spacing: 1.2px;\n        color: black;\n        font-size: 30px;\n        margin: 0;\n        padding: 20px 5px 5px 0px;\n    }\n    div {\n        text-align: left;\n        padding-left: 5px;\n        display: inline-block;\n        background: black;\n        h1{\n            color: #ff4a6a;\n        }\n    }\n`\n\n\n\nconst Header = () => {\n    return (\n        <Link to=\"/\" style={{textDecoration: `none`}}>\n            <Title>\n                <h1>Whats For </h1> \n                <div><h1>Dinner?</h1></div>\n            </Title>\n        </Link>\n    )\n}\n\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SpinnerStyles = styled.div`\ndisplay: block;\nmargin: auto;\nwidth: 80px !important;\nmargin-top: 15px;\n.lds-ellipsis {\n    display: inline-block;\n    position: relative;\n    width: 80px !important;\n    height: 80px;\n  }\n  .lds-ellipsis div {\n    position: absolute;\n    top: 33px;\n    width: 13px !important;\n    height: 13px;\n    border-radius: 50%;\n    background: salmon;\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n  }\n  .lds-ellipsis div:nth-child(1) {\n    left: 8px;\n    animation: lds-ellipsis1 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(2) {\n    left: 8px;\n    animation: lds-ellipsis2 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(3) {\n    left: 32px;\n    animation: lds-ellipsis2 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(4) {\n    left: 56px;\n    animation: lds-ellipsis3 0.6s infinite;\n  }\n  @keyframes lds-ellipsis1 {\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n  @keyframes lds-ellipsis3 {\n    0% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(0);\n    }\n  }\n  @keyframes lds-ellipsis2 {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(24px, 0);\n    }\n  }\n`\n\nconst Spinner = () => {\n    return (\n        <SpinnerStyles>\n             <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div> \n        </SpinnerStyles>   \n    )\n}\n\nexport default Spinner;","import React from 'react';\nimport styled from 'styled-components';\n\nconst IconContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border-radius: 5px;\n    @media (min-width: 768px) {\n        width: fit-content;\n        margin: 40px auto;\n        justify-content: start;\n        margin-bottom: 0px;\n      }\n    li {\n        display: flex;\n        flex-direction: row;\n        list-style: none;\n        align-items: center;\n        padding-right: 20px;\n        p{       \n            font-size: 12px;     \n            font-weight: bold;\n            line-height: 1;\n        }\n        svg{\n            width: 20px;\n            height: 20px;\n            padding-right: 4px;\n        }\n    }\n`\n\nconst Icons = (props) => {\n    return (\n        <IconContainer>\n            {props.children}\n        </IconContainer>\n    )\n}\n\nexport default Icons;","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport Spinner from '../components/spinner';\nimport axios from 'axios';\nimport Icons from '../components/iconBar';\nimport {Link} from 'react-router-dom';\nimport {MdTimer, MdLocalDining, MdThumbUp} from 'react-icons/md';\n\nconst RecipePageStyle = styled.article`\n    margin-top: 50px;\n    text-align: left;\n    width: 100%;\n    @media (min-width: 768px) {\n        width: 768px;\n        margin: 40px auto;\n        text-align: center;\n      }\n    p{\n        font-size: 10px;\n        font-weight: bold;\n        margin-bottom: 15px;\n    }\n    a{\n        text-decoration: none;\n        font-size: 10px;\n    }\n    img{\n        width: 100%;\n        border-radius: 10px;\n        @media (min-width: 768px) {\n            width: 650px;\n            margin: 40px auto;\n            text-align: center;\n       }\n    }\n    h2{\n        font-weight: 300;\n    }\n`\nconst InstructionContainer = styled.div`\n    border-top: 1px solid silver;\n    ol{\n        padding-left: 20px;\n        font-size: 14px;\n    }\n    p {\n        font-size: 12px;\n    }\n    @media (min-width: 768px) {\n        display: inline-block;\n        width: 50%;\n        text-align: left; \n        vertical-align: top; \n        border: none;    \n    }\n`\nconst IngredientContainer = styled.div`\n    width: 100%;\n    ul{\n        list-style: none;\n        padding-left: 20px;\n        li{\n            p{\n              color: black;\n              font-size: 12px;\n              font-weight: bold;\n            }\n        }\n    }\n    @media (min-width: 768px) {\n        display: inline-block;\n        width: 45%;\n        text-align: right;\n        margin-right: 5%;       \n    }\n`\n\nconst RecipePage = (props) => {\n    const sessionInstructions = JSON.parse(sessionStorage.getItem(props.match.params.id));\n    const [instructions, setInstructions] = useState(sessionInstructions ? sessionInstructions : undefined)\n\n    useEffect(()=> {\n        if(!sessionStorage.getItem(props.match.params.id)){\n            const key = `276ff92f42f14a1690bac6bdc10438bb`\n            const fetchRecipeData = async() => {\n                let url = `https://api.spoonacular.com/recipes/${props.match.params.id}/information`\n                const request = await axios.get(url,{params:{apiKey: key}});\n                sessionStorage.setItem(`${props.match.params.id}`, JSON.stringify(request.data))\n                setInstructions(request.data)\n            }\n            fetchRecipeData()\n        }else {\n            console.log('Using sessionStorage')\n        }\n    },[props.match.params.id])\n\n    return (\n        <RecipePageStyle>\n            {instructions ?\n                 <p><Link to=\"/\">Home/ </Link>{instructions.title}</p>\n                  : <Spinner/> }\n            {instructions ? \n            <>\n                <img src={instructions.image} alt={instructions.title}/>\n                <h1><mark>{instructions.title}</mark></h1> \n                <Icons>\n                   <li><MdTimer/><p>{instructions.readyInMinutes} min</p></li>\n                   <li><MdLocalDining/><p>{instructions.servings}</p></li>\n                   <li><MdThumbUp/><p> {instructions.aggregateLikes}</p></li>\n                </Icons>\n            </>\n                : <Spinner/>}\n            <IngredientContainer>\n                <h2>Ingredients</h2>\n                <ul>\n                {instructions ? instructions.extendedIngredients.map( (e,i) => (\n                    <li key={i}><p key={i}>{e.amount} {e.unit} {e.name}</p></li>\n                )) : <Spinner/> }\n                </ul>\n            </IngredientContainer>\n            <InstructionContainer>\n                <h2>Instructions</h2>\n                <ol>\n                {instructions ? instructions.analyzedInstructions[0].steps.map( (e,i) => (\n                    <li key={i}><p key={i}>{e.step}</p></li>\n                )) : <Spinner/> }\n                </ol>\n            </InstructionContainer>\n        </RecipePageStyle>\n    )\n}\n\nexport default RecipePage;","import React from 'react';\n\nexport const ThemeContext = React.createContext();\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport Icons from '../components/iconBar';\nimport {MdTimer, MdLocalDining} from 'react-icons/md';\n\nconst RecipeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100px;\n    text-align: left;\n    padding: 10px;\n    margin-top: 10px;\n    border-radius: 5px;\n    box-shadow: 2px 2px 4px grey;\n    transition: 0.3s;\n    @media (min-width: 768px) {\n        width: 48%;\n        height: 150px;\n      }\n    &:hover {\n        cursor: pointer;\n        filter: saturate(4);\n        background: rgba(255,255,255,0.4);\n    }\n    a {\n        text-decoration: none;\n    }\n    h3{\n        font-family: Times New Roman;\n        font-style: italic;\n        font-size: 14px;\n        font-weight: 300;\n        color: black;\n        text-transform: capitalize;\n        @media (min-width: 768px) {\n            font-size: 18px;\n          }\n    }\n\n`\nconst Recipe = (props) => {\n    return (\n            <RecipeContainer>     \n              <Link to={`${props.id}`} style={{width: `100%`, textDecoration: `none`, color: `black`}}>\n                    <h3>{props.title}</h3>\n                <Icons>\n                    <li><MdTimer/><p>{props.readyIn} min</p></li>\n                    <li><MdLocalDining/><p>{props.servings}</p></li>\n                    <li><p>CAL {props.calories}</p></li>\n                </Icons>\n              </Link>\n            </RecipeContainer>\n    )\n}\n\nexport default Recipe;","\nexport const nutritionConfig = [\n    {name: 'Everything',query:'', color: `hsl(50, 100%, 85%)`},\n    {name: 'Vegetarian',query:'vegetarian', color: `hsl(100, 100%, 85%)`},\n    {name: 'Gluten Free',query:'glutenfree', color: `hsl(150, 100%, 85%)`},\n    {name: 'Paleo',query:'paleo', color: `hsl(200, 100%, 85%)`},\n    {name: 'Whole30',query:'whole30', color: `hsl(250, 100%, 85%)`},\n    {name: 'Ketogenic',query:'Ketogenic', color: `hsl(300, 100%, 85%)`},\n]","import React, {useEffect, useState, useContext} from 'react';\nimport {ThemeContext} from '../context/themeContext';\nimport styled from 'styled-components';\nimport Recipe from '../components/recipe';\nimport axios from 'axios';\nimport Spinner from '../components/spinner';\nimport {nutritionConfig} from '../components/nutritionConfig';\n\nconst RecipesContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    margin: 30px 0px 40px 0px;\n    @media (min-width: 768px) {\n        width: 768px;\n        margin: 40px auto;\n        justify-content: space-around;\n        border-top: none;\n      }\n`\nconst NutritionPlan = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    margin-top: 20px;\n    text-align: left;\n    justify-content: space-between;\n    @media (min-width: 768px) {\n        width: 768px;\n        margin: 40px auto;\n        text-align: center;\n      }\n`\nconst Button = styled.button`\n    border: none;\n    box-shadow: 2px 2px 3px grey;\n    border-radius: 5px;\n    padding: 10px;\n    margin-right: 10px;\n    margin-top: 10px;\n    background:${props => props.background};\n    transition: 0.3s;\n    &:active{\n        filter: saturate(4);\n        box-shadow: 1px 1px 1px black;\n    }\n    &:focus{\n        filter: saturate(4);\n        box-shadow: 1px 1px 1px black;\n    }\n    &:hover{\n        cursor: pointer;\n        filter: saturate(4);\n    }\n`\nconst Meal = styled.div`\n    position: relative;\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    @media (min-width: 768px) {\n        width: 768px;\n        margin: 0px auto 20px auto;\n        text-align: center;\n        border-top: none;\n      }\n    button {\n        border: none;\n        box-shadow: 2px 2px 3px grey;\n        border-radius: 5px;\n        padding: 10px;\n        margin-right: 10px;\n        margin-top: 10px;\n        background: hsl(350, 100%, 85%);\n        &:hover{\n            cursor: pointer;\n            filter: saturate(4);\n        }\n    }\n`\n\nconst Recipes = () => {\n    const {theme, setTheme} = useContext(ThemeContext)\n    const [diet, setDiet] = useState('')\n    const persistedData = JSON.parse(sessionStorage.getItem(`recipes${diet}`))\n    const [state,setState] = useState(persistedData ? persistedData : {})\n    const [loading, toggleLoading] = useState(true);\n    const [meal, setMeal] = useState(1);\n\n    useEffect(() => {\n        if(sessionStorage.getItem(`recipes${diet}`)){\n            setState(JSON.parse(sessionStorage.getItem(`recipes${diet}`)))\n            toggleLoading(false)\n        } else {\n            const key = `276ff92f42f14a1690bac6bdc10438bb`\n            const fetchRecipes = async() => {\n                const response = await axios({\n                    method: `get`,\n                    url: `https://api.spoonacular.com/mealplanner/generate?timeFrame=week&diet=${diet}`,\n                    params: {apiKey: key}\n                })\n                sessionStorage.setItem(`recipes${diet}`, JSON.stringify(response.data.week))\n                setState(response.data.week)\n                toggleLoading(false)\n            }\n            toggleLoading(true)\n            fetchRecipes();\n        }\n    }, [diet])\n\n    const dietHandler = (e) => {\n        setDiet(e.query)\n        setTheme(e.color)\n    }\n\n    return (\n        <>\n               <h2>Select Nutrition Plan</h2>\n            <NutritionPlan>\n                <div>\n                    {nutritionConfig.map((e,i) => (\n                        <Button background={e.color} key={i} onClick={() => dietHandler(e)}>{e.name}</Button>\n                    ))}\n                </div>\n            </NutritionPlan>\n            <h2>Select Meal</h2>\n            <Meal>\n                <div className=\"button-container\">\n                    <button onClick={() => setMeal(0)}>Breakfast</button>\n                    <button onClick={() => setMeal(1)}>Lunch</button>\n                    <button onClick={() => setMeal(2)}>Dinner</button>\n                </div>\n            </Meal>\n            <h2>Recipes (1 week)</h2>\n            <RecipesContainer>\n                {loading ? <Spinner/> : Object.entries(state).map((e,i) =>  \n                    <Recipe \n                        key={i} \n                        title={e[1].meals[meal].title} \n                        id={e[1].meals[meal].id}\n                        readyIn={e[1].meals[meal].readyInMinutes}\n                        servings={e[1].meals[meal].servings}\n                        calories={(e[1].nutrients.calories/e[1].meals[meal].servings).toFixed(2)}\n                    ></Recipe>)}\n            </RecipesContainer>\n        </>\n    )\n\n}\n\nexport default Recipes;\n","import { createGlobalStyle } from 'styled-components';\nimport TangerineBold from '../assets/fonts/Tangerine/Tangerine-Bold.ttf';\nimport TangerineRegular from '../assets/fonts/Tangerine/Tangerine-Regular.ttf';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'Tangerine';\n        src: local('Tangerine'), local('Tangerine'),\n        url(${TangerineBold}) format('woff2'),\n        url(${TangerineRegular}) format('woff');\n        font-weight: 300;\n        font-style: normal;\n    }\n`;","import React, {useState} from 'react';\nimport Header from './components/header';\nimport {Route} from 'react-router-dom';\nimport RecipePage from './containers/recipePage';\nimport Recipes from './containers/recipes';\nimport GlobalFonts from './components/fonts';\nimport './App.scss';\nimport {ThemeContext} from './context/themeContext';\n\nfunction App() {\n  const [theme,setTheme] = useState(`hsl(350,100%, 85%)`)\n  return (\n    <ThemeContext.Provider value={{theme,setTheme}}>\n      <div style={{background: `linear-gradient(120deg, white, ${theme})`}}className=\"App\">\n        <GlobalFonts/>\n        <Header/>\n          <Route exact path=\"/\" component={Recipes}/>\n          <Route path=\"/:id\" component={RecipePage}/>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}